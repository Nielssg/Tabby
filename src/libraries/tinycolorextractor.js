// TinyColorExtractor library, source: https://github.com/MR158/TinyColorExtractor
"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_createClass=function(){function t(t,e){for(var o=0;o<e.length;o++){var r=e[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,o,r){return o&&t(e.prototype,o),r&&t(e,r),e}}();function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var TinyColorExtractor=function(){function t(e,o){var r=this;if(_classCallCheck(this,t),"object"===(void 0===e?"undefined":_typeof(e))){if("string"!=typeof e.src)throw new Error("The value of src is incorrect");if(e.quality<=0||e.quality>10||"number"!=typeof e.quality)throw new Error("The value of quality is incorrect");if(e.tolerance<=0||e.tolerance>100||"number"!=typeof e.tolerance)throw new Error("The value of tolerance is incorrect");if(e.colorCount<=0||"number"!=typeof e.colorCount)throw new Error("The value of colorCount is incorrect");this.imgURL=e.src,this.quality=e.hasOwnProperty("quality")?11-e.quality:5,this.tolerance=e.hasOwnProperty("tolerance")?e.tolerance:10,this.colorCount=e.hasOwnProperty("colorCount")?e.colorCount:5}else{if("string"!=typeof e)throw new Error("The value of src is incorrect");this.imgURL=e,this.quality=5,this.tolerance=10,this.colorCount=5}var n=new Image;n.crossOrigin="*",n.src=this.imgURL,n.addEventListener("load",function(){r.pixels=new CanvasImage(n).getPixels(),r.getColorData().then(function(t){if(r.colorCount>t.length)throw new Error("ColorCount value beyond the range");for(var e,n,i,a,l=[],s=0,c=!0;s<r.colorCount;s++)if(l.length>0){e=t[s][0].split(",");for(var h=0;h<l.length;h++){if(n=Math.abs(e[0]-l[h][0]),i=Math.abs(e[1]-l[h][1]),a=Math.abs(e[2]-l[h][2]),n<r.tolerance||i<r.tolerance||a<r.tolerance){c=!1;break}c=!0}c?l.push(e):r.colorCount<t.length?r.colorCount+=1:(console.warn("tolerance overcounted, failed to gain enough data"),r.colorCount=t.length)}else l.push(t[s][0].split(","));o(l)})})}return _createClass(t,[{key:"getColorData",value:function(){var t={},e=[];this.colorMap(function(e){t[e]=e in t?t[e]+=1:1});for(var o in t)e.push([o,t[o]]);return new Promise(function(t,o){t(e.sort(function(t,e){return e[1]-t[1]}))})}},{key:"colorMap",value:function(t){for(var e=0;e<this.pixels.length;e+=4*this.quality)this.pixels[e+3]<128||t(this.rgbFormat(e))}},{key:"rgbFormat",value:function(t){return this.pixels[t]+","+this.pixels[t+1]+","+this.pixels[t+2]}}]),t}(),CanvasImage=function(){function t(e){_classCallCheck(this,t),this.canvas=document.createElement("canvas"),this.context=this.canvas.getContext("2d"),this.canvas.width=this.width=e.width,this.canvas.height=this.height=e.height,this.context.drawImage(e,0,0,e.width,e.height)}return _createClass(t,[{key:"getPixels",value:function(){return this.context.getImageData(0,0,this.width,this.height).data}}]),t}();
//# sourceMappingURL=tiny-color-extractor.min.js.map